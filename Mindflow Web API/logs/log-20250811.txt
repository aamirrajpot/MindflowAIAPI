2025-08-11 19:13:07.244 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:13:07.292 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:13:07.326 +05:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:13:07.423 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:13:07.434 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:13:07.435 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:13:07.447 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:13:07.460 +05:00 [INF] Applying migration '20250801124036_Add_CopingMechanisms_And_JoyPeaceSources_Fields'.
2025-08-11 19:13:07.497 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [CopingMechanisms] nvarchar(max) NULL;
2025-08-11 19:13:07.501 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [JoyPeaceSources] nvarchar(500) NULL;
2025-08-11 19:13:07.516 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250801124036_Add_CopingMechanisms_And_JoyPeaceSources_Fields', N'9.0.2');
2025-08-11 19:13:07.516 +05:00 [INF] Applying migration '20250806192929_AddWeekdayWeekendTimeFields'.
2025-08-11 19:13:07.626 +05:00 [INF] Executed DbCommand (98ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var sysname;
SELECT @var = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[app].[WellnessCheckIns]') AND [c].[name] = N'WeekdayFreeTime');
IF @var IS NOT NULL EXEC(N'ALTER TABLE [app].[WellnessCheckIns] DROP CONSTRAINT [' + @var + '];');
ALTER TABLE [app].[WellnessCheckIns] DROP COLUMN [WeekdayFreeTime];
2025-08-11 19:13:07.680 +05:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[app].[WellnessCheckIns]') AND [c].[name] = N'WeekendFreeTime');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [app].[WellnessCheckIns] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [app].[WellnessCheckIns] DROP COLUMN [WeekendFreeTime];
2025-08-11 19:13:07.683 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekdayEndShift] nvarchar(2) NULL;
2025-08-11 19:13:07.685 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekdayEndTime] nvarchar(10) NULL;
2025-08-11 19:13:07.687 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekdayStartShift] nvarchar(2) NULL;
2025-08-11 19:13:07.690 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekdayStartTime] nvarchar(10) NULL;
2025-08-11 19:13:07.692 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekendEndShift] nvarchar(2) NULL;
2025-08-11 19:13:07.694 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekendEndTime] nvarchar(10) NULL;
2025-08-11 19:13:07.696 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekendStartShift] nvarchar(2) NULL;
2025-08-11 19:13:07.699 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[WellnessCheckIns] ADD [WeekendStartTime] nvarchar(10) NULL;
2025-08-11 19:13:07.702 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250806192929_AddWeekdayWeekendTimeFields', N'9.0.2');
2025-08-11 19:13:07.703 +05:00 [INF] Applying migration '20250811141209_AddTaskItemEntity'.
2025-08-11 19:13:07.731 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [app].[Tasks] (
    [Id] uniqueidentifier NOT NULL,
    [UserId] uniqueidentifier NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Category] int NOT NULL,
    [OtherCategoryName] nvarchar(max) NULL,
    [Date] datetime2 NOT NULL,
    [Time] nvarchar(max) NOT NULL,
    [TimeShift] nvarchar(max) NULL,
    [DurationMinutes] int NOT NULL,
    [ReminderEnabled] bit NOT NULL,
    [RepeatType] int NOT NULL,
    [CreatedBySuggestionEngine] bit NOT NULL,
    [IsApproved] bit NOT NULL,
    [Created] datetimeoffset NOT NULL,
    [LastModified] datetimeoffset NOT NULL,
    CONSTRAINT [PK_Tasks] PRIMARY KEY ([Id])
);
2025-08-11 19:13:07.732 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250811141209_AddTaskItemEntity', N'9.0.2');
2025-08-11 19:13:08.139 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:13:08.577 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:13:25.514 +05:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:13:25.656 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:13:25.852 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:13:25.999 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:13:26.060 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:13:26.096 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:13:26.130 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:13:26.166 +05:00 [INF] No migrations were applied. The database is already up to date.
2025-08-11 19:13:26.747 +05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:13:26.885 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:13:27.003 +05:00 [INF] Executed DbCommand (38ms) [Parameters=[@__adminEmail_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [app].[Users] AS [u]
        WHERE [u].[Email] = @__adminEmail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-11 19:13:27.197 +05:00 [INF] User profile is available. Using 'C:\Users\muhammad.aamir2810\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-11 19:13:27.989 +05:00 [INF] Now listening on: https://localhost:7046
2025-08-11 19:13:27.993 +05:00 [INF] Now listening on: http://localhost:5000
2025-08-11 19:13:28.014 +05:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-11 19:13:28.097 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-11 19:13:28.100 +05:00 [INF] Hosting environment: Development
2025-08-11 19:13:28.105 +05:00 [INF] Content root path: C:\Users\muhammad.aamir2810\Desktop\Personal\MindflowAIAPI\Mindflow Web API
2025-08-11 19:13:29.138 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger - null null
2025-08-11 19:13:29.596 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger - 301 0 null 465.5756ms
2025-08-11 19:13:29.613 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/index.html - null null
2025-08-11 19:13:29.810 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/index.html - 200 null text/html;charset=utf-8 197.5994ms
2025-08-11 19:13:29.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/index.css - null null
2025-08-11 19:13:29.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/swagger-ui.css - null null
2025-08-11 19:13:29.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/index.js - null null
2025-08-11 19:13:29.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/swagger-ui-standalone-preset.js - null null
2025-08-11 19:13:29.985 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/index.css - 200 202 text/css 149.9703ms
2025-08-11 19:13:29.986 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/index.js - 200 null application/javascript;charset=utf-8 150.8454ms
2025-08-11 19:13:29.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/swagger-ui-bundle.js - null null
2025-08-11 19:13:29.939 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/_framework/aspnetcore-browser-refresh.js - null null
2025-08-11 19:13:30.087 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/swagger-ui.css - 200 155175 text/css 253.1131ms
2025-08-11 19:13:30.087 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/swagger-ui-standalone-preset.js - 200 229223 text/javascript 252.2282ms
2025-08-11 19:13:30.096 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/_vs/browserLink - null null
2025-08-11 19:13:30.115 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 175.6845ms
2025-08-11 19:13:30.160 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/swagger-ui-bundle.js - 200 1485750 text/javascript 324.6612ms
2025-08-11 19:13:30.252 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/_vs/browserLink - 200 null text/javascript; charset=UTF-8 156.2975ms
2025-08-11 19:13:30.494 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/v1/swagger.json - null null
2025-08-11 19:13:30.526 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.6219ms
2025-08-11 19:13:30.548 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/favicon-32x32.png - null null
2025-08-11 19:13:30.585 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/favicon-32x32.png - 200 628 image/png 37.0559ms
2025-08-11 19:14:46.338 +05:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:14:46.448 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:14:46.491 +05:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:14:46.585 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:14:46.614 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:14:46.623 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:14:46.641 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:14:46.655 +05:00 [INF] No migrations were applied. The database is already up to date.
2025-08-11 19:14:47.056 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:14:47.143 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:14:47.220 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[@__adminEmail_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [app].[Users] AS [u]
        WHERE [u].[Email] = @__adminEmail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-11 19:14:47.341 +05:00 [INF] User profile is available. Using 'C:\Users\muhammad.aamir2810\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-11 19:14:47.584 +05:00 [FTL] Application startup exception
System.InvalidOperationException: Failure to infer one or more parameters.
Below is the list of parameters that we found: 

Parameter           | Source                        
---------------------------------------------------------------------------------
dto                 | Body (Inferred)
taskService         | UNKNOWN        


Did you mean to register the "UNKNOWN" parameters as a Service?


   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)
   at InvokeStub_AuthorizationPolicyCache..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at InvokeStub_AuthorizationMiddlewareInternal..ctor(Object, Object, Object, Object, Object)
   at System.Reflection.ConstructorInvoker.InvokeImpl(Object arg1, Object arg2, Object arg3, Object arg4)
   at System.Reflection.ConstructorInvoker.Invoke(Span`1 arguments)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2025-08-11 19:14:47.682 +05:00 [ERR] Hosting failed to start
System.InvalidOperationException: Failure to infer one or more parameters.
Below is the list of parameters that we found: 

Parameter           | Source                        
---------------------------------------------------------------------------------
dto                 | Body (Inferred)
taskService         | UNKNOWN        


Did you mean to register the "UNKNOWN" parameters as a Service?


   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)
   at InvokeStub_AuthorizationPolicyCache..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at InvokeStub_AuthorizationMiddlewareInternal..ctor(Object, Object, Object, Object, Object)
   at System.Reflection.ConstructorInvoker.InvokeImpl(Object arg1, Object arg2, Object arg3, Object arg4)
   at System.Reflection.ConstructorInvoker.Invoke(Span`1 arguments)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-11 19:16:07.519 +05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:16:07.603 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:16:07.665 +05:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:16:07.811 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:16:07.854 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:16:07.863 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:16:07.878 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:16:07.903 +05:00 [INF] No migrations were applied. The database is already up to date.
2025-08-11 19:16:08.372 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:16:08.463 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:16:08.533 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[@__adminEmail_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [app].[Users] AS [u]
        WHERE [u].[Email] = @__adminEmail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-11 19:16:08.656 +05:00 [INF] User profile is available. Using 'C:\Users\muhammad.aamir2810\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-11 19:16:08.942 +05:00 [FTL] Application startup exception
System.InvalidOperationException: Failure to infer one or more parameters.
Below is the list of parameters that we found: 

Parameter           | Source                        
---------------------------------------------------------------------------------
dto                 | Body (Inferred)
taskService         | UNKNOWN        


Did you mean to register the "UNKNOWN" parameters as a Service?


   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)
   at InvokeStub_AuthorizationPolicyCache..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at InvokeStub_AuthorizationMiddlewareInternal..ctor(Object, Object, Object, Object, Object)
   at System.Reflection.ConstructorInvoker.InvokeImpl(Object arg1, Object arg2, Object arg3, Object arg4)
   at System.Reflection.ConstructorInvoker.Invoke(Span`1 arguments)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
2025-08-11 19:16:09.038 +05:00 [ERR] Hosting failed to start
System.InvalidOperationException: Failure to infer one or more parameters.
Below is the list of parameters that we found: 

Parameter           | Source                        
---------------------------------------------------------------------------------
dto                 | Body (Inferred)
taskService         | UNKNOWN        


Did you mean to register the "UNKNOWN" parameters as a Service?


   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)
   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)
   at InvokeStub_AuthorizationPolicyCache..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at InvokeStub_AuthorizationMiddlewareInternal..ctor(Object, Object, Object, Object, Object)
   at System.Reflection.ConstructorInvoker.InvokeImpl(Object arg1, Object arg2, Object arg3, Object arg4)
   at System.Reflection.ConstructorInvoker.Invoke(Span`1 arguments)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-11 19:17:03.083 +05:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:17:03.161 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:17:03.211 +05:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:17:03.385 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:17:03.439 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:17:03.452 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:17:03.475 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:17:03.500 +05:00 [INF] No migrations were applied. The database is already up to date.
2025-08-11 19:17:03.903 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:17:04.015 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:17:04.173 +05:00 [INF] Executed DbCommand (35ms) [Parameters=[@__adminEmail_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [app].[Users] AS [u]
        WHERE [u].[Email] = @__adminEmail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-11 19:17:04.337 +05:00 [INF] User profile is available. Using 'C:\Users\muhammad.aamir2810\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-11 19:17:04.856 +05:00 [INF] Now listening on: https://localhost:7046
2025-08-11 19:17:04.863 +05:00 [INF] Now listening on: http://localhost:5000
2025-08-11 19:17:04.877 +05:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-11 19:17:04.965 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-11 19:17:04.970 +05:00 [INF] Hosting environment: Development
2025-08-11 19:17:04.973 +05:00 [INF] Content root path: C:\Users\muhammad.aamir2810\Desktop\Personal\MindflowAIAPI\Mindflow Web API
2025-08-11 19:17:05.515 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/_vs/browserLink - null null
2025-08-11 19:17:05.515 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/_framework/aspnetcore-browser-refresh.js - null null
2025-08-11 19:17:05.591 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 80.9085ms
2025-08-11 19:17:05.629 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/_vs/browserLink - 200 null text/javascript; charset=UTF-8 120.8113ms
2025-08-11 19:17:06.018 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/swagger/v1/swagger.json - null null
2025-08-11 19:17:06.160 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 141.2497ms
2025-08-11 19:18:53.587 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7046/api/users/signin - application/json 76
2025-08-11 19:18:53.682 +05:00 [INF] CORS policy execution successful.
2025-08-11 19:18:53.883 +05:00 [INF] Executing endpoint 'HTTP: POST /api/users/signin'
2025-08-11 19:18:54.059 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[@__command_UserNameOrEmail_0='?' (Size = 100), @__command_UserNameOrEmail_0_1='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Created], [u].[DateOfBirth], [u].[Email], [u].[EmailConfirmed], [u].[FirstName], [u].[IsActive], [u].[LastModified], [u].[LastName], [u].[PasswordHash], [u].[ProfilePic], [u].[SecurityStamp], [u].[Sub], [u].[UserName]
FROM [app].[Users] AS [u]
WHERE [u].[UserName] = @__command_UserNameOrEmail_0 OR [u].[Email] = @__command_UserNameOrEmail_0_1
2025-08-11 19:18:54.285 +05:00 [INF] User signed in: AamirRajpot
2025-08-11 19:18:54.304 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:18:54.319 +05:00 [INF] Writing value of type 'TokenResponseDto' as Json.
2025-08-11 19:18:54.336 +05:00 [INF] Executed endpoint 'HTTP: POST /api/users/signin'
2025-08-11 19:18:54.346 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7046/api/users/signin - 200 null application/json; charset=utf-8 759.0161ms
2025-08-11 19:19:24.326 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7046/api/tasks - null null
2025-08-11 19:19:24.591 +05:00 [INF] Executing endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:19:25.052 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[UserId] = @__userId_0
2025-08-11 19:19:25.073 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:19:25.095 +05:00 [INF] Writing value of type 'ListSelectIterator`2' as Json.
2025-08-11 19:19:25.133 +05:00 [INF] Executed endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:19:25.138 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7046/api/tasks - 200 null application/json; charset=utf-8 813.5633ms
2025-08-11 19:21:16.401 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7046/api/tasks - null null
2025-08-11 19:21:16.428 +05:00 [INF] Executing endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:21:16.450 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[UserId] = @__userId_0
2025-08-11 19:21:16.462 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:21:16.466 +05:00 [INF] Writing value of type 'ListSelectIterator`2' as Json.
2025-08-11 19:21:16.476 +05:00 [INF] Executed endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:21:16.481 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7046/api/tasks - 200 null application/json; charset=utf-8 79.8637ms
2025-08-11 19:22:05.662 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7046/api/tasks - application/json 246
2025-08-11 19:22:05.692 +05:00 [INF] CORS policy execution successful.
2025-08-11 19:22:05.704 +05:00 [INF] Executing endpoint 'HTTP: POST /api/tasks/'
2025-08-11 19:22:06.242 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p3='?' (DbType = Boolean), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (DbType = Int32), @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTimeOffset), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (DbType = Int32), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [app].[Tasks] ([Id], [Category], [Created], [CreatedBySuggestionEngine], [Date], [Description], [DurationMinutes], [IsApproved], [LastModified], [OtherCategoryName], [ReminderEnabled], [RepeatType], [Time], [TimeShift], [Title], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15);
2025-08-11 19:22:06.287 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:22:06.293 +05:00 [INF] Writing value of type 'TaskItemDto' as Json.
2025-08-11 19:22:06.314 +05:00 [INF] Executed endpoint 'HTTP: POST /api/tasks/'
2025-08-11 19:22:06.321 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7046/api/tasks - 200 null application/json; charset=utf-8 659.4432ms
2025-08-11 19:22:12.972 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/api/tasks - null null
2025-08-11 19:22:13.008 +05:00 [INF] Executing endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:22:13.031 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[UserId] = @__userId_0
2025-08-11 19:22:13.047 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:22:13.051 +05:00 [INF] Writing value of type 'ListSelectIterator`2' as Json.
2025-08-11 19:22:13.057 +05:00 [INF] Executed endpoint 'HTTP: GET /api/tasks/'
2025-08-11 19:22:13.062 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/api/tasks - 200 null application/json; charset=utf-8 90.1991ms
2025-08-11 19:22:32.310 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - null null
2025-08-11 19:22:32.344 +05:00 [INF] Executing endpoint 'HTTP: GET /api/tasks/{taskId:guid}'
2025-08-11 19:22:32.411 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[@__taskId_0='?' (DbType = Guid), @__userId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[Id] = @__taskId_0 AND [t].[UserId] = @__userId_1
2025-08-11 19:22:32.422 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:22:32.426 +05:00 [INF] Writing value of type 'TaskItemDto' as Json.
2025-08-11 19:22:32.430 +05:00 [INF] Executed endpoint 'HTTP: GET /api/tasks/{taskId:guid}'
2025-08-11 19:22:32.435 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - 200 null application/json; charset=utf-8 125.2333ms
2025-08-11 19:22:59.276 +05:00 [INF] Request starting HTTP/2 PUT https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - application/json 406
2025-08-11 19:22:59.287 +05:00 [INF] CORS policy execution successful.
2025-08-11 19:22:59.292 +05:00 [INF] Executing endpoint 'HTTP: PUT /api/tasks/{taskId:guid}'
2025-08-11 19:22:59.372 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__taskId_0='?' (DbType = Guid), @__userId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[Id] = @__taskId_0 AND [t].[UserId] = @__userId_1
2025-08-11 19:22:59.384 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:22:59.401 +05:00 [INF] Writing value of type 'TaskItemDto' as Json.
2025-08-11 19:22:59.406 +05:00 [INF] Executed endpoint 'HTTP: PUT /api/tasks/{taskId:guid}'
2025-08-11 19:22:59.411 +05:00 [INF] Request finished HTTP/2 PUT https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - 200 null application/json; charset=utf-8 150.8856ms
2025-08-11 19:23:15.734 +05:00 [INF] Request starting HTTP/2 PUT https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - application/json 409
2025-08-11 19:23:15.746 +05:00 [INF] CORS policy execution successful.
2025-08-11 19:23:15.752 +05:00 [INF] Executing endpoint 'HTTP: PUT /api/tasks/{taskId:guid}'
2025-08-11 19:23:15.782 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[@__taskId_0='?' (DbType = Guid), @__userId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[Category], [t].[Created], [t].[CreatedBySuggestionEngine], [t].[Date], [t].[Description], [t].[DurationMinutes], [t].[IsApproved], [t].[LastModified], [t].[OtherCategoryName], [t].[ReminderEnabled], [t].[RepeatType], [t].[Time], [t].[TimeShift], [t].[Title], [t].[UserId]
FROM [app].[Tasks] AS [t]
WHERE [t].[Id] = @__taskId_0 AND [t].[UserId] = @__userId_1
2025-08-11 19:23:15.844 +05:00 [INF] Executed DbCommand (19ms) [Parameters=[@p5='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [app].[Tasks] SET [Description] = @p0, [DurationMinutes] = @p1, [RepeatType] = @p2, [Time] = @p3, [Title] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2025-08-11 19:23:15.856 +05:00 [INF] Setting HTTP status code 200.
2025-08-11 19:23:15.860 +05:00 [INF] Writing value of type 'TaskItemDto' as Json.
2025-08-11 19:23:15.864 +05:00 [INF] Executed endpoint 'HTTP: PUT /api/tasks/{taskId:guid}'
2025-08-11 19:23:15.869 +05:00 [INF] Request finished HTTP/2 PUT https://localhost:7046/api/tasks/b488d33e-7bd0-4c82-862e-9960a5c36549 - 200 null application/json; charset=utf-8 134.7763ms
2025-08-11 19:23:53.758 +05:00 [INF] Executed DbCommand (291ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:23:53.833 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:23:54.202 +05:00 [INF] Executed DbCommand (365ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:23:54.820 +05:00 [INF] Executed DbCommand (260ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:23:55.613 +05:00 [INF] Executed DbCommand (261ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:23:55.920 +05:00 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:23:56.234 +05:00 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:23:56.253 +05:00 [INF] Applying migration '20250811141209_AddTaskItemEntity'.
2025-08-11 19:23:56.595 +05:00 [INF] Executed DbCommand (322ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [app].[Tasks] (
    [Id] uniqueidentifier NOT NULL,
    [UserId] uniqueidentifier NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NULL,
    [Category] int NOT NULL,
    [OtherCategoryName] nvarchar(max) NULL,
    [Date] datetime2 NOT NULL,
    [Time] nvarchar(max) NOT NULL,
    [TimeShift] nvarchar(max) NULL,
    [DurationMinutes] int NOT NULL,
    [ReminderEnabled] bit NOT NULL,
    [RepeatType] int NOT NULL,
    [CreatedBySuggestionEngine] bit NOT NULL,
    [IsApproved] bit NOT NULL,
    [Created] datetimeoffset NOT NULL,
    [LastModified] datetimeoffset NOT NULL,
    CONSTRAINT [PK_Tasks] PRIMARY KEY ([Id])
);
2025-08-11 19:23:56.858 +05:00 [INF] Executed DbCommand (262ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250811141209_AddTaskItemEntity', N'9.0.2');
2025-08-11 19:23:57.498 +05:00 [INF] Executed DbCommand (262ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:23:58.279 +05:00 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-11 19:32:15.616 +05:00 [INF] Executed DbCommand (290ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:32:15.733 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-11 19:32:16.028 +05:00 [INF] Executed DbCommand (284ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-11 19:32:16.868 +05:00 [INF] Executed DbCommand (322ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-11 19:32:17.689 +05:00 [INF] Executed DbCommand (303ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-11 19:32:17.949 +05:00 [INF] Executed DbCommand (253ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-11 19:32:18.216 +05:00 [INF] Executed DbCommand (258ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-11 19:32:18.227 +05:00 [INF] Applying migration '20250811142906_AddTaskItemStatus'.
2025-08-11 19:32:18.504 +05:00 [INF] Executed DbCommand (259ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [app].[Tasks] ADD [Status] int NOT NULL DEFAULT 0;
2025-08-11 19:32:18.759 +05:00 [INF] Executed DbCommand (253ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250811142906_AddTaskItemStatus', N'9.0.2');
2025-08-11 19:32:19.261 +05:00 [INF] Executed DbCommand (255ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[Created], [m].[Genre], [m].[LastModified], [m].[Rating], [m].[ReleaseDate], [m].[Title]
FROM [app].[Movies] AS [m]
WHERE [m].[Title] = N'Sonic the Hedgehog 3'
2025-08-11 19:32:19.938 +05:00 [INF] Executed DbCommand (291ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
